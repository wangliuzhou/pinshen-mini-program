"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var globalEnum = require("../../api/GlobalEnum");
var moment = require("moment");
var app = getApp();
var webAPI = require("../../api/app/AppService");
var PortfolioPage = (function () {
    function PortfolioPage() {
        this.userInfo = {};
        this.data = {
            birthday: 2000,
            ageGroupIndex: 3,
            ageGroup: ['6个月以下', '6个月-1岁', '1-3岁', '3-4岁', '4-7岁', '7-10岁', '10-11岁', '11-14岁', '14-18岁', '18-30岁', '30-50岁', '50-60岁', '60-65岁', '65-80岁', '80岁以上'],
            genderIndex: 1,
            genderArray: ['', '男', '女'],
            height: 170,
            currentWeight: 50,
            weightBeforePreg: 60,
            pregnancyStatusIndex: 1,
            pregnancyStatusArray: ['都不是', '备孕', '已孕', '哺乳期'],
            activityLevelIndex: 1,
            activityLevelArray: ['卧床休息', '轻度,静坐少动', '中度,常常站立走动', '重度,负重', '剧烈，超负重'],
            pregnancyDate: {
                date: moment().format("YYYY-MM-DD"),
                year: moment().format("YYYY"),
                month: moment().format("MM"),
                day: moment().format("DD")
            },
        };
    }
    PortfolioPage.prototype.onTabItemTap = function (item) {
        wx.reportAnalytics('switch_tab', {
            tab_index: item.index,
            tab_pagepath: item.pagePath,
            tab_text: item.text
        });
    };
    PortfolioPage.prototype.onPullDownRefresh = function () {
        this.getProfileData();
    };
    PortfolioPage.prototype.onLoad = function () {
        webAPI.SetAuthToken(wx.getStorageSync(globalEnum.globalKey_token));
        this.getProfileData();
    };
    PortfolioPage.prototype.getProfileData = function () {
        var _this = this;
        var req = {};
        var that = this;
        wx.showLoading({ title: "加载中...", mask: true });
        webAPI.RetrieveUserProfile(req).then(function (resp) {
            console.log("Retrieving user profile...");
            console.log(resp);
            wx.hideLoading({});
            var keys = Object.keys(resp);
            var errorChecking = [];
            for (var i = 0; i < keys.length; i++) {
                var key = keys[i];
                if (resp[key] === -1 || resp[key] === '') {
                    errorChecking[i] = true;
                }
                else {
                    errorChecking[i] = false;
                }
                that.setData({
                    errorChecking: errorChecking
                });
            }
            console.log("get data", _this.data);
            var tempDate;
            if (resp.expected_birth_date == -1) {
                tempDate = moment();
            }
            else {
                tempDate = moment.unix(resp.expected_birth_date);
            }
            that.setData({
                genderIndex: resp.gender,
                birthday: resp.year_of_birth == -1 ? 1980 : resp.year_of_birth,
                height: resp.height == -1 ? 0 : resp.height,
                currentWeight: resp.weight == -1 ? 0 : resp.weight,
                weightBeforePreg: resp.weight_before_pregnancy == -1 ? 0 : resp.weight_before_pregnancy,
                pregnancyStatusIndex: resp.pregnancy_stage,
                activityLevelIndex: resp.activity_level - 1,
                externalId: resp.external_id,
                pregnancyDate: {
                    date: tempDate.format('YYYY-MM-DD'),
                    year: tempDate.format('YYYY'),
                    month: tempDate.format('MM'),
                    day: tempDate.format('DD')
                },
            });
            wx.stopPullDownRefresh({});
        }).catch(function (err) { return wx.hideLoading({}); });
    };
    PortfolioPage.prototype.profileChecking = function () {
        var values = Object.values(this.data);
        console.log(values);
        var errorChecking = [];
        for (var i = 0; i < values.length; i++) {
            var value = values[i];
            if (value === -1 || value === '') {
                errorChecking[i] = true;
            }
            else {
                errorChecking[i] = false;
            }
            this.setData({
                errorChecking: errorChecking
            });
        }
    };
    PortfolioPage.prototype.onShow = function () {
    };
    PortfolioPage.prototype.authenticationRequest = function () {
        var _this = this;
        if (app.globalData.userInfo) {
            this.userInfo = app.globalData.userInfo;
        }
        else {
            console.log('start getUserInfo');
            wx.getUserInfo({
                success: function (res) {
                    app.globalData.userInfo = res.userInfo;
                    console.log('get getUserInfo' + res.userInfo);
                    _this.userInfo = app.globalData.userInfo;
                },
                fail: function (err) {
                    wx.navigateTo({
                        url: '../invitation/index'
                    });
                }
            });
        }
    };
    PortfolioPage.prototype.generateProfileReqBody = function () {
        console.log(this.data.userInfo);
        var pregDateTimestamp = moment(this.data.pregnancyDate.date).unix();
        var reqBody = {
            gender: this.data.genderIndex,
            year_of_birth: this.data.birthday,
            height: this.data.height,
            weight: this.data.currentWeight,
            weight_before_pregnancy: this.data.weightBeforePreg,
            activity_level: this.data.activityLevelIndex + 1,
            pregnancy_stage: this.data.pregnancyStatusIndex,
            expected_birth_date: pregDateTimestamp,
            nickname: this.userInfo.nickName,
            avatar_url: '',
            external_id: this.data.externalId,
        };
        console.log("Request body generated.");
        console.log(reqBody);
        return reqBody;
    };
    PortfolioPage.prototype.pregnancyStatusSelect = function (event) {
        this.setData({
            pregnancyStatusIndex: Number(event.detail.value)
        });
        this.updateProfile();
    };
    PortfolioPage.prototype.activityLvlSelect = function (event) {
        this.setData({
            activityLevelIndex: Number(event.detail.value)
        });
        this.updateProfile();
    };
    PortfolioPage.prototype.onPregnancyDateInput = function (event) {
        var newDate = moment(event.detail.value);
        var year = newDate.year();
        var month = newDate.month() + 1;
        var day = newDate.date();
        var today = moment();
        var pregDateLimit = moment().add(45, 'w');
        if (newDate.isBetween(today, pregDateLimit)) {
            console.log("Pregnancy date is valid");
            this.setData({
                pregnancyDate: {
                    date: event.detail.value,
                    year: year.toString(),
                    month: month.toString(),
                    day: day.toString()
                }
            });
            this.updateProfile();
        }
        else {
            this.setData({
                pregnancyDate: {
                    date: today.format("YYYY-MM-DD"),
                    year: today.format("YYYY"),
                    month: today.format("MM"),
                    day: today.format("DD")
                }
            });
            wx.showModal({
                title: "",
                content: "预产期只能输入今天到未来45周后的日期",
                showCancel: false
            });
        }
    };
    PortfolioPage.prototype.onHeightInput = function (event) {
        var heightValue = Number(event.detail.value);
        var preHeight = this.data.height;
        if (heightValue > 230 || heightValue < 40) {
            this.setData({
                height: preHeight
            });
            wx.showModal({
                title: "",
                content: "身高的范围在40cm和230cm之间",
                showCancel: false
            });
        }
        else {
            this.setData({
                height: heightValue
            });
            this.updateProfile();
        }
    };
    PortfolioPage.prototype.checkWeight = function (event) {
        var weightValue = Number(event.detail.value);
        if (weightValue < 30 || weightValue > 300) {
            this.setData({
                weight: 0
            });
            wx.showModal({
                title: "",
                content: "体重的范围在30kg和300kg之间",
                showCancel: false
            });
        }
        else {
            this.setData({
                weight: weightValue
            });
            this.updateProfile();
        }
    };
    PortfolioPage.prototype.onWeightBeforePregInput = function (event) {
        var weightValue = Number(event.detail.value);
        this.setData({
            weightBeforePreg: weightValue
        });
        this.updateProfile();
    };
    PortfolioPage.prototype.onCurrentWeightInput = function (event) {
        var currentWeightValue = Number(event.detail.value);
        var preWeight = this.data.currentWeight;
        if (currentWeightValue < 3 || currentWeightValue > 150) {
            this.setData({
                currentWeight: preWeight
            });
            wx.showModal({
                title: "",
                content: "体重的范围在3kg和150kg之间",
                showCancel: false
            });
        }
        else {
            this.setData({
                currentWeight: currentWeightValue
            });
            this.updateProfile();
        }
    };
    PortfolioPage.prototype.birthdaySelect = function (event) {
        this.setData({
            birthday: Number(event.detail.value)
        });
        this.updateProfile();
    };
    PortfolioPage.prototype.genderSelect = function (event) {
        this.setData({
            genderIndex: Number(event.detail.value)
        });
        this.updateProfile();
    };
    PortfolioPage.prototype.tapOnMealHabit = function () {
        wx.navigateTo({
            url: '../foodPreference/index'
        });
        wx.reportAnalytics('tap_on_meal_habit', {});
    };
    PortfolioPage.prototype.tapOnMedicalRecord = function () {
        wx.navigateTo({
            url: '../medicalCase/index'
        });
        wx.reportAnalytics('tap_medical_record', {});
    };
    PortfolioPage.prototype.onIDInput = function (event) {
        var inputId = (event.detail.value).trim();
        this.setData({
            externalId: inputId
        });
        this.updateProfile();
    };
    PortfolioPage.prototype.updateProfile = function () {
        webAPI.UpdateUserProfile(this.generateProfileReqBody()).then(function (resp) {
        }).catch(function (err) { return wx.showModal({
            title: '更新个人资料失败',
            content: String(err),
            showCancel: false
        }); });
        wx.reportAnalytics('update_profile', {});
    };
    return PortfolioPage;
}());
Page(new PortfolioPage());
//# sourceMappingURL=data:application/json;base64,